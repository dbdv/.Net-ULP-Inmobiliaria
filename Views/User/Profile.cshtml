@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@model User
@{
    ViewData["Title"] = "Mi perfil";
    var token = antiforgery.GetAndStoreTokens(Context).RequestToken;
    var defaultProfilePath = (string)ViewBag.defaultProfilePath;
    @* var types = @Html.Raw(Json.Serialize(ViewBag.types)); *@
}

<section class="section">
    <form class="profile-form form" action="" onsubmit="handleSubmit(event)" onkeyup="handleChange(event)">
        <h2 class="form-title">Mis datos</h2>
        <div class="avatar-input-container">
            @{
                @if (Model.Avatar != null)
                {
                    <img class="avatar-img" src=@($"/uploads/{@Model.Avatar}") id="selected-img"/>
                }
                else
                {
                    <img class="avatar-img" src="~/images/add_avatar.png" id="selected-img"/>
                }
            }
            <input disabled class="avatar-input disabled hidden" onchange="onSelectFile(event)" id="avatar-input" type="file">
            <img class="remove-img hidden" src="~/images/close_icon.png" onclick="removeProfileAvatar()">
            <span></span>
        </div>
        <div>
            <label class="email-label">Email asociado</label>
            <input disabled type="text" class="disabled" value=@Model.Email>
        </div>
        <div class="password-edit hidden">
            <div>
                <label>Contraseña actual</label>
                <input id="current-pass" disabled type="password" name="newPassword">
                <span></span>
            </div>
            <div>
                <label>Nueva contraseña</label>
                <input id="new-pass" disabled type="password" name="currentPassword">
                <span></span>
            </div>
            <div>
                <label>Confirmar contraseña</label>
                <input id="repeat-new-pass" disabled type="password" name="confirmNewPassword">
                <span></span>
            </div>
        </div>
        <div class="action-buttons">
            <button id="edit-btn" onclick="showEditData()">Editar</button>
            <button id="update-btn" class="hidden" onclick="sendUpdate()" disabled>Actualizar</button>
            <button id="cancel-btn" class="hidden" onclick="cancelUpdate()">Cancelar</button>
        </div>
    </form>
</section>

<script>

    const defaultAvatar = "https://localhost:7164/images/add_avatar.png";
    let formData = new FormData();

    const defaultUserBody = {
        currentPassword: null,
        newPassword: null,
        confirmNewPassword: null,
        avatar: null,
        avatarUrl: '@Model.Avatar'.length > 0 ? '@Model.Avatar' : null,
    }

    let userBody = {...defaultUserBody};

    function handleSubmit(e){
        e.preventDefault();
    }

    function handleChange(e){
        console.log(e);
        userBody[e.target.name] = e.target.value;

        console.log(userBody);
        checkInputs();
    }

    function checkInputs(){
        if(userBody.currentPassword != null || userBody.newPassword != null || userBody.confirmNewPassword != null){
            toggleBtn(  userBody.currentPassword != null 
                        && userBody.newPassword != null 
                        && userBody.confirmNewPassword == userBody.newPassword
            );
            return;
        }

        toggleBtn(
            userBody.avatar != null 
            || (userBody.avatarUrl != null && userBody.avatarUrl.length == 0)
        )
    }

    function toggleBtn(state){
        if(state)
            document.querySelector("#update-btn").removeAttribute('disabled');
        else
            document.querySelector("#update-btn").setAttribute('disabled', true);
    }

    function addErrorWatcher(event){
        event.target.classList.add("error-watcher");
    }

    function removeErrorWatcher(){
        document.querySelectorAll(".error-watcher").forEach(input=>{
            input.classList.remove("error-watcher");
        })
    }

    function showActions(){
        document.querySelector(".actions-section").classList.remove("actions-section-hide")
    }

    function clearForm(){
        document.querySelector("#password-input").value='';
        document.querySelector("#email-input").value='';
        document.querySelector("#role-input").value=null;
        document.querySelector(".error-toast").classList.add("hidden");
        userBody = {...defaultUserBody};
        document.querySelector("#send-button").removeEventListener("click",()=>{sendUser()});
    }

    function createForm(){
        showActions();
        document.querySelector(".form-title").innerHTML = "Nuevo usuario";
        document.querySelector("#send-button").innerHTML = "Agregar";
        document.querySelector("#send-button").addEventListener("click", ()=>{sendUser()});
        document.querySelector(".spinner").classList.add("hidden");
        document.querySelector(".form").classList.remove("hidden");
    }

    function cancelAction(){
        document.querySelector(".actions-section").classList.add("actions-section-hide")
        document.querySelector(".form").classList.add("hidden");
        document.querySelector(".confirm-delete").classList.add("hidden");
        document.querySelector(".spinner").classList.remove("hidden");
        clearForm();
        removeErrorWatcher();
    }

    function showError(type, msg, effect = null){
        document.querySelector(".spinner").classList.add("hidden");
        document.querySelector(".error-toast").classList.remove("hidden");
        document.querySelector(".error-type").innerHTML = type;
        document.querySelector(".error-msg").innerHTML = msg;
        setTimeout(()=>{
            closeToast(effect);
        }, 3.5 * 1000)
    }

    function closeToast(effect = null){
        document.querySelector(".error-toast").classList.add("hidden");
        document.querySelector(".error-type").innerHTML = '';
        document.querySelector(".error-msg").innerHTML = '';
        if(effect) effect();
    }

    function confirmDelete(id){
        document.querySelector(".spinner").classList.add("hidden");
        document.querySelector(".confirm-delete").classList.remove("hidden");
        document.querySelector(".delete-btn").addEventListener("click", ()=>{
            document.querySelector(".spinner").classList.remove("hidden");
            document.querySelector(".confirm-delete").classList.add("hidden");
            deleteUser(id);
        })
        showActions();
    }

    function onSelectFile(e){
        userBody.avatar = e.target.value;
        document.querySelector("#selected-img").setAttribute("src", URL.createObjectURL(e.target.files[0]));
        formData.append('avatar', e.target.files[0]);
        document.querySelector(".remove-img").classList.remove("hidden");
        checkInputs();
    }

    function removeProfileAvatar(){
        document.querySelector('#avatar-input').value = '';
        document.querySelector(".remove-img").classList.add("hidden");
        document.querySelector("#selected-img").setAttribute("src", defaultAvatar);
        formData.append('avatar', '');
        userBody.avatarUrl = '';
        formData.append('avatarUrl', userBody.avatarUrl);
        checkInputs();
    }

    function sendUpdate(){
        if(userBody.newPassword){
            formData.append('newPassword', userBody.newPassword);
            formData.append('currentPassword', userBody.currentPassword);
        }
        console.log(formData);
        fetch(`${base_url}users/update`, {
            method: 'POST',
            body: formData
        }).then(res=>{
            if(res.redirected)
                window.location.href =res.url;
        })
    }

    function showEditData(){
        document.querySelector("#edit-btn").classList.add("hidden");
        document.querySelector(".avatar-img").classList.add("editing");
        document.querySelector("#update-btn").classList.remove("hidden");
        document.querySelector("#cancel-btn").classList.remove("hidden");
        document.querySelector(".remove-img").classList.remove("hidden");
        document.querySelector(".password-edit").classList.remove("hidden");

        document.querySelector("#avatar-input").removeAttribute('disabled');
        document.querySelector("#current-pass").removeAttribute('disabled');
        document.querySelector("#new-pass").removeAttribute('disabled');
        document.querySelector("#repeat-new-pass").removeAttribute('disabled');
        document.querySelector("#avatar-input").classList.remove('hidden');
    }

    function cancelUpdate(){
        @* document.querySelector("#edit-btn").classList.remove("hidden");
        document.querySelector(".avatar-img").classList.remove("editing");
        document.querySelector("#update-btn").classList.add("hidden");
        document.querySelector("#cancel-btn").classList.add("hidden");
        document.querySelector(".remove-img").classList.add("hidden");
        document.querySelector("#avatar-input").setAttribute('disabled', true);
        document.querySelector("#current-pass").setAttribute('disabled', true);
        document.querySelector("#new-pass").setAttribute('disabled', true);
        document.querySelector("#repeat-new-pass").setAttribute('disabled', true);
        document.querySelector("#avatar-input").classList.add('hidden');
        document.querySelector(".password-edit").classList.add("hidden");
        userBody = {...defaultUserBody};
        console.log('userbody: ', userBody, 'default: ', defaultUserBody)
        formData = new FormData(); *@
        location.reload();
    }

</script>